// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/address/ilceler/:il": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get Ilceler List",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ILLER"
                ],
                "summary": "Ilceler List",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.ResponseHTTP"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/iller.Iller"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseHTTP"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseHTTP"
                        }
                    }
                }
            }
        },
        "/api/v1/address/iller": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get Iller List",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ILLER"
                ],
                "summary": "Iller List",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.ResponseHTTP"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/iller.Iller"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseHTTP"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseHTTP"
                        }
                    }
                }
            }
        },
        "/api/v1/ai": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "AI",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AI"
                ],
                "summary": "AI",
                "parameters": [
                    {
                        "description": "chat ai",
                        "name": "{object}",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ai.Chat"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseHTTP"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseHTTP"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/login": {
            "post": {
                "description": "Login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "login"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "Login login",
                        "name": "{object}",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/login.Login"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.ResponseHTTP"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/login.Login"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseHTTP"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/otp": {
            "post": {
                "description": "Login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "login"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "Otp login",
                        "name": "{object}",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/login.Otp"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.ResponseHTTP"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/login.Otp"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseHTTP"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/register": {
            "post": {
                "description": "Register User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "login"
                ],
                "summary": "Register a new usernotify",
                "parameters": [
                    {
                        "description": "Register usernotify",
                        "name": "usernotify",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.ResponseHTTP"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/user.User"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseHTTP"
                        }
                    }
                }
            }
        },
        "/api/v1/blog/list": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get GetList List",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Blog"
                ],
                "summary": "GetList List",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.ResponseHTTP"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/blog.Blog"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseHTTP"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseHTTP"
                        }
                    }
                }
            }
        },
        "/api/v1/blog/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get GetBlog",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Blog"
                ],
                "summary": "GetBlog",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Blog id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.ResponseHTTP"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/blog.Blog"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseHTTP"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseHTTP"
                        }
                    }
                }
            }
        },
        "/api/v1/notification/fcm": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "SaveToken",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notification"
                ],
                "summary": "SaveToken",
                "parameters": [
                    {
                        "description": "Otp login",
                        "name": "{object}",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/notification.PushToken"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.ResponseHTTP"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/notification.Notification"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseHTTP"
                        }
                    }
                }
            }
        },
        "/api/v1/notification/list": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get Notification List",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notification"
                ],
                "summary": "Notification List",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.ResponseHTTP"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/notification.Notification"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseHTTP"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseHTTP"
                        }
                    }
                }
            }
        },
        "/api/v1/notification/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "GetNotification User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notification"
                ],
                "summary": "GetNotification",
                "parameters": [
                    {
                        "maxLength": 40,
                        "minLength": 5,
                        "type": "string",
                        "description": "string valid",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.ResponseHTTP"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/notification.Notification"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseHTTP"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "DeleteNotification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notification"
                ],
                "summary": "DeleteNotification",
                "parameters": [
                    {
                        "maxLength": 50,
                        "minLength": 5,
                        "type": "string",
                        "description": "string valid",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.ResponseHTTP"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/notification.Notification"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseHTTP"
                        }
                    }
                }
            }
        },
        "/api/v1/user": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "GetUser User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "login"
                ],
                "summary": "GetUser",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.ResponseHTTP"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/user.User"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseHTTP"
                        }
                    }
                }
            }
        },
        "/api/v1/user/update": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "GetUser User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "login"
                ],
                "summary": "GetUser",
                "parameters": [
                    {
                        "description": "Update user",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.ResponseHTTP"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/user.User"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseHTTP"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ai.Chat": {
            "type": "object",
            "properties": {
                "msg": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "blog.Blog": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "gelisme": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "giris": {
                    "type": "string"
                },
                "img": {
                    "type": "string"
                },
                "off": {
                    "type": "string"
                },
                "sonuc": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "iller.Iller": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "counties": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "districts": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "neighborhoods": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "code": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "name": {
                                "type": "string"
                            }
                        }
                    }
                },
                "name": {
                    "type": "string"
                },
                "plaka": {
                    "type": "integer"
                }
            }
        },
        "login.Login": {
            "type": "object",
            "properties": {
                "phone": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "login.Otp": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "notification.HealthRecommendations": {
            "type": "object",
            "properties": {
                "athletes": {
                    "type": "string"
                },
                "children": {
                    "type": "string"
                },
                "elderly": {
                    "type": "string"
                },
                "generalPopulation": {
                    "type": "string"
                },
                "heartDiseasePopulation": {
                    "type": "string"
                },
                "lungDiseasePopulation": {
                    "type": "string"
                },
                "pregnantWomen": {
                    "type": "string"
                }
            }
        },
        "notification.Notification": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "healthRecommendations": {
                    "$ref": "#/definitions/notification.HealthRecommendations"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "mdate": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "ndate": {
                    "type": "string"
                },
                "nid": {
                    "type": "string"
                },
                "read": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "notification.PushToken": {
            "type": "object",
            "properties": {
                "fcmToken": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "user.Address": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "address": {
                    "type": "string",
                    "maxLength": 250,
                    "minLength": 5
                },
                "default": {
                    "type": "boolean"
                },
                "il": {
                    "type": "string"
                },
                "ilce": {
                    "type": "string"
                },
                "lat": {
                    "type": "number"
                },
                "lng": {
                    "type": "number"
                },
                "mahalle": {
                    "type": "string",
                    "maxLength": 250,
                    "minLength": 5
                },
                "name": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 2
                },
                "notify": {
                    "type": "boolean"
                },
                "sokak": {
                    "type": "string"
                },
                "urgent": {
                    "type": "boolean"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "user.Language": {
            "type": "string",
            "enum": [
                "Turkish"
            ],
            "x-enum-varnames": [
                "Turkish"
            ]
        },
        "user.Role": {
            "type": "string",
            "enum": [
                "Member"
            ],
            "x-enum-varnames": [
                "Member"
            ]
        },
        "user.User": {
            "type": "object",
            "required": [
                "email",
                "name",
                "phone"
            ],
            "properties": {
                "_id": {
                    "type": "string"
                },
                "address": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/user.Address"
                    }
                },
                "avatar": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "fcmToken": {
                    "type": "string"
                },
                "lang": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/user.Language"
                    }
                },
                "name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 5
                },
                "phone": {
                    "type": "string"
                },
                "role": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/user.Role"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "utils.ResponseHTTP": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "description": "This is an API for UstAI Application",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "UstAI",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
